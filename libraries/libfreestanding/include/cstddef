/*
 * Copyright © 2021 Michał 'Griwes' Dominiak
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#define offsetof(type, member) reinterpret_cast<std::size_t>(&(static_cast<type *>(nullptr))->member)

namespace std
{
using size_t = decltype(sizeof(0));
using ptrdiff_t = decltype(static_cast<char *>(nullptr) - static_cast<char *>(nullptr));
using nullptr_t = decltype(nullptr);
}

// vim: ft=cpp
